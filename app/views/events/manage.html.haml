%h1= @event.name

- if @rulesets.empty?
  %h4
    There are no rulesets.
    = link_to "Please create one.", new_ruleset_path
- elsif !@event.ruleset
  %h4
    This event has no base ruleset.
    Please select one:
    = form_for @event do |f|
      = f.select(:ruleset_id, options_from_collection_for_select(@rulesets, :id, :name))
      = f.submit "Apply ruleset", class: "btn"
- else
  %h4 Change your base (canonical) ruleset.
  = form_for @event do |f|
    / = collection_select :event, :ruleset_id, @rulesets, :id, :name, { :selected => @event.ruleset.name }
    = f.select :ruleset_id, options_from_collection_for_select(@rulesets, "id", "name", :selected => @event.ruleset.id)
    = f.submit "Change ruleset", class: "btn"
- if @event.tiers.empty?
  %h4 This event has no tiers. Please create one.
- else

  %h3 Tiers
  %table.table.table-condensed.table-bordered.table-hover
    %tr
      %th Name
      %th Position
      %th Ruleset
      %th Tier Settings
      %th Delete Tier

    - @event.tiers.ranked.each do |tier|
      %tr
        %td
          = tier.name
        %td
          = tier.tier_hierarchy_position
        %td
          - if !tier.ruleset?
            Edit Override Ruleset
          - else
            = link_to "Edit Override Ruleset", edit_tier_ruleset_path(tier.ruleset)
        %td
          = link_to "Edit", edit_tier_path(tier)
        %td
          = link_to "Delete", event_tier_path(@event, tier), :method => :delete

%h4 Create Tiers

= render "tier_form", :locals => {:event => @event, :tier => @tier}

%hr

%h3 Divisions (by Tier)

= render "divisions", :event => @event

